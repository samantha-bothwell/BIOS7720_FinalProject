ggplot(comb, aes(x = BCr2)) +
geom_histogram(fill = "indianred3", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") +
geom_text(data = bcr_sum, aes(label = lab2), x = 0.5, y = 35, size = 4) +
ggtitle("GFR of 120 for all patients")
ggplot(comb, aes(x = BCr2)) +
geom_histogram(fill = "indianred3", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + ylim(0, 50) +
geom_text(data = bcr_sum, aes(label = lab2), x = 0.5, y = 45, size = 4) +
ggtitle("GFR of 120 for all patients")
ggplot(comb, aes(x = BCr2)) +
geom_histogram(fill = "indianred3", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + ylim(0, 55) +
geom_text(data = bcr_sum, aes(label = lab2), x = 0.5, y = 45, size = 4) +
ggtitle("GFR of 120 for all patients")
ggplot(comb, aes(x = BCr1)) +
geom_histogram(fill = "turquoise4", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") +
geom_text(data = bcr_sum, aes(label = lab1), x = 0.5, y = 35, size = 4) +
ggtitle("GFR of 90 for patients < 1 yo")
ggplot(comb, aes(x = BCr2)) +
geom_histogram(fill = "indianred3", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") +
geom_text(data = bcr_sum, aes(label = lab2), x = 0.5, y = 35, size = 4) +
ggtitle("GFR of 120 for all patients")
ggplot(comb, aes(x = BCr1)) +
geom_histogram(fill = "turquoise4", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab1), x = 0.5, y = 35, size = 4) +
ggtitle("GFR of 90 for patients < 1 yo")
ggplot(comb, aes(x = BCr1)) +
geom_histogram(fill = "turquoise4", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab1), x = 0.5, y = 40, size = 4) +
ggtitle("GFR of 90 for patients < 1 yo")
ggplot(comb, aes(x = BCr2)) +
geom_histogram(fill = "indianred3", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab2), x = 0.5, y = 40, size = 4) +
ggtitle("GFR of 120 for all patients")
bcr_sum = comb %>%
pivot_longer(cols = 8:9, names_to = "Calculation", values_to = "BCr") %>%
group_by(Site, missbcr) %>%
summarize(median1 = median(BCr1, na.rm = T), median2 = median(BCr2, na.rm = T),
q1.1 = quantile(BCr1, 0.25, na.rm = T), q1.2 = quantile(BCr2, 0.25, na.rm = T),
q3.1 = quantile(BCr1, 0.75, na.rm = T), q3.2 = quantile(BCr2, 0.75, na.rm = T), N = n()) %>%
mutate(lab1 = paste("N = ", N, "Median = ", round(median1,1), "\nQ1 = ", round(q1.1, 1), ", Q3 = ", round(q3.1, 1)),
lab2 = paste("N = ", N, "Median = ", round(median2,1), "\nQ1 = ", round(q1.2, 1), ", Q3 = ", round(q3.2, 1)))
bcr_sum = comb %>%
# pivot_longer(cols = 8:9, names_to = "Calculation", values_to = "BCr") %>%
group_by(Site, missbcr) %>%
summarize(median1 = median(BCr1, na.rm = T), median2 = median(BCr2, na.rm = T),
q1.1 = quantile(BCr1, 0.25, na.rm = T), q1.2 = quantile(BCr2, 0.25, na.rm = T),
q3.1 = quantile(BCr1, 0.75, na.rm = T), q3.2 = quantile(BCr2, 0.75, na.rm = T), N = n()) %>%
mutate(lab1 = paste("N = ", N, "Median = ", round(median1,1), "\nQ1 = ", round(q1.1, 1), ", Q3 = ", round(q3.1, 1)),
lab2 = paste("N = ", N, "Median = ", round(median2,1), "\nQ1 = ", round(q1.2, 1), ", Q3 = ", round(q3.2, 1)))
ggplot(comb, aes(x = BCr1)) +
geom_histogram(fill = "turquoise4", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab1), x = 0.5, y = 40, size = 4) +
ggtitle("GFR of 90 for patients < 1 yo")
bcr_sum = comb %>%
# pivot_longer(cols = 8:9, names_to = "Calculation", values_to = "BCr") %>%
group_by(Site, missbcr) %>%
summarize(median1 = median(BCr1, na.rm = T), median2 = median(BCr2, na.rm = T),
q1.1 = quantile(BCr1, 0.25, na.rm = T), q1.2 = quantile(BCr2, 0.25, na.rm = T),
q3.1 = quantile(BCr1, 0.75, na.rm = T), q3.2 = quantile(BCr2, 0.75, na.rm = T), N = n()) %>%
mutate(lab1 = paste("N = ", N, "Median = ", round(median1,1), "\nQ1 = ", round(q1.1, 1), ", Q3 = ", round(q3.1, 1)),
lab2 = paste("N = ", N, ", Median = ", round(median2,1), "\nQ1 = ", round(q1.2, 1), ", Q3 = ", round(q3.2, 1)))
ggplot(comb, aes(x = BCr1)) +
geom_histogram(fill = "turquoise4", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab1), x = 0.5, y = 40, size = 4) +
ggtitle("GFR of 90 for patients < 1 yo")
bcr_sum = comb %>%
# pivot_longer(cols = 8:9, names_to = "Calculation", values_to = "BCr") %>%
group_by(Site, missbcr) %>%
summarize(median1 = median(BCr1, na.rm = T), median2 = median(BCr2, na.rm = T),
q1.1 = quantile(BCr1, 0.25, na.rm = T), q1.2 = quantile(BCr2, 0.25, na.rm = T),
q3.1 = quantile(BCr1, 0.75, na.rm = T), q3.2 = quantile(BCr2, 0.75, na.rm = T), N = n()) %>%
mutate(lab1 = paste("N = ", N, ", Median = ", round(median1,1), "\nQ1 = ", round(q1.1, 1), ", Q3 = ", round(q3.1, 1)),
lab2 = paste("N = ", N, ", Median = ", round(median2,1), "\nQ1 = ", round(q1.2, 1), ", Q3 = ", round(q3.2, 1)))
ggplot(comb, aes(x = BCr1)) +
geom_histogram(fill = "turquoise4", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab1), x = 0.5, y = 40, size = 4) +
ggtitle("GFR of 90 for patients < 1 yo")
ggplot(comb, aes(x = BCr2)) +
geom_histogram(fill = "indianred3", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab2), x = 0.5, y = 40, size = 4) +
ggtitle("GFR of 120 for all patients")
ggplot(comb, aes(x = BCr1)) +
geom_histogram(fill = "turquoise4", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab1), x = 0.5, y = 40, size = 3) +
ggtitle("GFR of 90 for patients < 1 yo")
ggplot(comb, aes(x = BCr1)) +
geom_histogram(fill = "turquoise4", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab1), x = 0.7, y = 40, size = 3) +
ggtitle("GFR of 90 for patients < 1 yo")
ggplot(comb, aes(x = BCr2)) +
geom_histogram(fill = "indianred3", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab2), x = 0.7, y = 40, size = 3) +
ggtitle("GFR of 120 for all patients")
ggplot(comb, aes(x = BCr2)) +
geom_histogram(fill = "indianred3", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab2), x = 0.7, y = 40, size = 4) +
ggtitle("GFR of 120 for all patients")
ggplot(comb, aes(x = BCr1)) +
geom_histogram(fill = "turquoise4", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab1), x = 0.7, y = 40, size = 4) +
ggtitle("GFR of 90 for patients < 1 yo")
bcr_sum = comb %>%
# pivot_longer(cols = 8:9, names_to = "Calculation", values_to = "BCr") %>%
group_by(Site, missbcr) %>%
summarize(median1 = median(BCr1, na.rm = T), median2 = median(BCr2, na.rm = T),
q1.1 = quantile(BCr1, 0.25, na.rm = T), q1.2 = quantile(BCr2, 0.25, na.rm = T),
q3.1 = quantile(BCr1, 0.75, na.rm = T), q3.2 = quantile(BCr2, 0.75, na.rm = T), N = n()) %>%
mutate(lab1 = paste("N = ", N, ", Median = ", round(median1,2), "\nQ1 = ", round(q1.1, 2), ", Q3 = ", round(q3.1, 2)),
lab2 = paste("N = ", N, ", Median = ", round(median2,2), "\nQ1 = ", round(q1.2, 2), ", Q3 = ", round(q3.2, 2)))
ggplot(comb, aes(x = BCr1)) +
geom_histogram(fill = "turquoise4", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab1), x = 0.7, y = 40, size = 4) +
ggtitle("GFR of 90 for patients < 1 yo")
ggplot(comb, aes(x = BCr2)) +
geom_histogram(fill = "indianred3", col = "black", binwidth = 0.05) +
facet_grid(missbcr~Site) + ylab("Frequency") + xlab("Baseline Creatinine") +
geom_text(data = bcr_sum, aes(label = lab2), x = 0.7, y = 40, size = 4) +
ggtitle("GFR of 120 for all patients")
View(dem)
rm(list = ls())
### Load packages
library(tidyverse)
library(stringr)
library(ggplot2)
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
sleep <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Fitbit_sleep_1AcademicYr_long_matched.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataRaw/BasicSurvey(3-6-20).csv")
View(step)
### Summarize average
step_avg <- step %>%
group_by(egoid) %>%
dplyr::summarize(mn.step = mean(steps, na.rm = T))
View(step_avg)
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographic.csv")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
### Add college, gender, race, socio-economic status and BMI
step_avg$College <- dem$College[match(step_avg$egoid, dem$egoid)]
step_avg$Gender <- dem$gender_1[match(step_avg$egoid, dem$egoid)]
View(dem)
step_avg$Race <- dem$race_1[match(step_avg$egoid, dem$egoid)]
step_avg$Income <- dem$Income[match(step_avg$egoid, dem$egoid)]
step_avg$BMI <- dem$BMI[match(step_avg$egoid, dem$egoid)]
### Linear model
lm.mod <- lm(mn.step ~ College + Gender + Race + Income + BMI, data = step_avg)
summary(lm.mod)
View(step)
rm(list = ls())
### Load packages
library(tidyverse)
library(stringr)
library(ggplot2)
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
### Add college, gender, race, socio-economic status and BMI
step$College <- dem$College[match(step$egoid, dem$egoid)]
step$Gender <- dem$gender_1[match(step$egoid, dem$egoid)]
step$Race <- dem$race_1[match(step$egoid, dem$egoid)]
step$Income <- dem$Income[match(step$egoid, dem$egoid)]
step$BMI <- dem$BMI[match(step$egoid, dem$egoid)]
View(step)
### Complete step day by including missing md values
step$md <- as.numeric(step$md)
step <- step %>%
complete(md = seq(1, 366, by = 1))
rm(list = ls())
### Load packages
library(tidyverse)
library(stringr)
library(ggplot2)
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
### Complete step day by including missing md values
step$md <- as.numeric(step$md)
step <- step %>%
complete(md = seq(1, 366, by = 1))
rm(list = ls())
### Load packages
library(tidyverse)
library(stringr)
library(ggplot2)
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
### Complete step day by including missing md values
step$md <- as.numeric(step$md)
step <- step %>%
tidyr::complete(md = seq(1, 366, by = 1))
rm(list = ls())
### Load packages
library(tidyverse)
library(stringr)
library(ggplot2)
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
### Complete step day by including missing md values
step$md <- as.numeric(step$md)
step <- step %>%
tidyr::complete(md =1:366)
### Complete step day by including missing md values
step <- step %>%
mutate(md = as.numeric(md)) %>%
group_by(egoid) %>%
tidyr::complete(md = 1:366)
470*366
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
### Complete step day by including missing md values
step <- step %>%
mutate(md = as.numeric(md, AcademicYr, days_yr, maxMissing)) %>%
group_by(egoid) %>%
tidyr::complete(md = 1:366, fill = list())
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
### Complete step day by including missing md values
step <- step %>%
mutate(md = as.numeric(md)) %>%
group_by(egoid, AcademicYr, days_yr, maxMissing) %>%
tidyr::complete(md = 1:366, fill = list())
### Complete step day by including missing md values
step <- step %>%
mutate(md = as.numeric(md)) %>%
group_by(egoid, AcademicYr, days_yr, maxMissing) %>%
tidyr::complete(md = 1:366, datadate = seq.Date(min(datadate), max(datadate), by = "Day"))
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
### Complete step day by including missing md values
step <- step %>%
mutate(md = as.numeric(md), datadate = as.Date(datadate, format = "%Y-%m-%d")) %>%
group_by(egoid, AcademicYr, days_yr, maxMissing) %>%
tidyr::complete(md = 1:366, datadate = seq.Date(min(datadate), max(datadate), by = "Day"))
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
### Complete step day by including missing md values
step <- step %>%
mutate(md = as.numeric(md), datadate = as.Date(datadate, format = "%Y-%m-%d")) %>%
group_by(egoid, AcademicYr, days_yr, maxMissing) %>%
tidyr::complete(md = 1:366, datadate = seq.Date(min(datadate), max(datadate), by = "day"))
rm(list = ls())
### Load packages
library(tidyverse)
library(stringr)
library(ggplot2)
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
### Complete step day by including missing md values
step <- step %>%
mutate(md = as.numeric(md), datadate = as.Date(datadate, format = "%Y-%m-%d")) %>%
group_by(egoid, AcademicYr, days_yr, maxMissing) %>%
tidyr::complete(md = 1:366, datadate = seq.Date(min(datadate), max(datadate), by = "day"))
rm(list = ls())
### Load packages
library(tidyverse)
library(stringr)
library(ggplot2)
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
step <- step %>%
mutate(md = as.numeric(md), datadate = as.Date(datadate, format = "%Y-%m-%d")) %>%
group_by(egoid, AcademicYr, days_yr, maxMissing) %>%
tidyr::complete(md = 1:366)
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
### Complete step day by including missing md values
step <- step %>%
mutate(md = as.numeric(md), datadate = as.Date(datadate, format = "%Y-%m-%d")) %>%
group_by(egoid, AcademicYr, days_yr, maxMissing) %>%
tidyr::complete(md = 1:366) %>%
mutate(sind = md/366)
### Add college, gender, race, socio-economic status and BMI
step$College <- dem$College[match(step$egoid, dem$egoid)]
step$Gender <- dem$gender_1[match(step$egoid, dem$egoid)]
step$Race <- dem$race_1[match(step$egoid, dem$egoid)]
step$Income <- dem$Income[match(step$egoid, dem$egoid)]
step$BMI <- dem$BMI[match(step$egoid, dem$egoid)]
library(refund)
# Fit a naive model not accounting for correlation
fit_naive <- bam(steps ~ s(sind, bs="cr",k=30) + s(sind, by=College, bs="cr",k=30) +
s(sind, by = Gender, bs="cr", k=30) + s(sind, by = Race, bs="cr", k=30) +
s(sind, by = Income, bs="cr", k=30) + s(sind, by = BMI, bs="cr", k=30),
method="fREML", data=step, discrete=TRUE)
### Load packages
library(tidyverse)
library(stringr)
library(ggplot2)
library(refund)
library(mgcv)
library(lme4)
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
### Complete step day by including missing md values
step <- step %>%
mutate(md = as.numeric(md), datadate = as.Date(datadate, format = "%Y-%m-%d")) %>%
group_by(egoid, AcademicYr, days_yr, maxMissing) %>%
tidyr::complete(md = 1:366) %>%
mutate(sind = md/366)
### Add college, gender, race, socio-economic status and BMI
step$College <- dem$College[match(step$egoid, dem$egoid)]
step$Gender <- dem$gender_1[match(step$egoid, dem$egoid)]
step$Race <- dem$race_1[match(step$egoid, dem$egoid)]
step$Income <- dem$Income[match(step$egoid, dem$egoid)]
step$BMI <- dem$BMI[match(step$egoid, dem$egoid)]
# Fit a naive model not accounting for correlation
fit_naive <- bam(steps ~ s(sind, bs="cr",k=30) + s(sind, by=College, bs="cr",k=30) +
s(sind, by = Gender, bs="cr", k=30) + s(sind, by = Race, bs="cr", k=30) +
s(sind, by = Income, bs="cr", k=30) + s(sind, by = BMI, bs="cr", k=30),
method="fREML", data=step, discrete=TRUE)
# Fit a naive model not accounting for correlation
fit_naive <- bam(steps ~ s(sind, bs="cr",k=30) + # s(sind, by = College, bs="cr",k=30) +
# s(sind, by = Gender, bs="cr", k=30) + s(sind, by = Race, bs="cr", k=30) +
# s(sind, by = Income, bs="cr", k=30) +
s(sind, by = BMI, bs="cr", k=30),
method="fREML", data=step, discrete=TRUE)
# Fit a naive model not accounting for correlation
fit_naive <- bam(steps ~ s(sind, bs="cr",k=30) + s(sind, by = College, bs="cr",k=30) +
# s(sind, by = Gender, bs="cr", k=30) + s(sind, by = Race, bs="cr", k=30) +
# s(sind, by = Income, bs="cr", k=30) +
s(sind, by = BMI, bs="cr", k=30),
method="fREML", data=step, discrete=TRUE)
# Fit a naive model not accounting for correlation
fit_naive <- bam(steps ~ s(sind, bs="cr",k=30) + College + Gender + Race + Income +
# s(sind, by = Gender, bs="cr", k=30) + s(sind, by = Race, bs="cr", k=30) +
# s(sind, by = Income, bs="cr", k=30) +
s(sind, by = BMI, bs="cr", k=30),
method="fREML", data=step, discrete=TRUE)
summary(fit_naive)
step_wide <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_wide.rds")
View(step_wide)
# Extract eigenfunctions
step_wide <- step_wide[,-1:4]
# Extract eigenfunctions
step_wide <- step_wide[,-c(1:4)]
Steps_fpca <- fpca.sc(Y = step_wide, knots = 15)
Steps_fpca <- fpca.sc(Y = step_wide)
# Extract eigenfunctions
step_mat <- as.matrix(step_wide[,-c(1:4)])
Steps_fpca <- fpca.sc(Y = step_Mat, knots = 15)
View(step_mat)
Steps_fpca <- fpca.sc(Y = step_mat, knots = 15)
Steps_fpca <- fpca.sc(Y = step_mat)
Phi_hat <- Steps_fpca$efunctions
library(refund.shiny)
refund.shiny::plot_shiny(Steps_fpca) # Plot to see important eigenfuntions
# Include first 4 eigenfunctions in data
step$Phi1 <- rep(Phi_hat[,1], 470)
# Extract eigenfunctions
step_mat <- as.matrix(step_wide[,-c(1:4)])
View(step_mat)
rm(list = ls())
### Load packages
library(tidyverse)
library(stringr)
library(ggplot2)
library(refund)
library(mgcv)
library(lme4)
### Load in cleaned data
step <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_long.rds")
dem <- read.csv("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/Demographics.csv")
step_wide <- readRDS("D:/CU/Spring 2021/FDA/Final Project/BIOS7720_FinalProject/Data/DataProcessed/FitBit_steps_1AcademicYear_wide.rds")
### Complete step day by including missing md values
step <- step %>%
mutate(md = as.numeric(md), datadate = as.Date(datadate, format = "%Y-%m-%d")) %>%
group_by(egoid, AcademicYr, days_yr, maxMissing) %>%
tidyr::complete(md = 1:366) %>%
mutate(sind = md/366)
### Add college, gender, race, socio-economic status and BMI
step$College <- dem$College[match(step$egoid, dem$egoid)]
step$Gender <- dem$gender_1[match(step$egoid, dem$egoid)]
step$Race <- dem$race_1[match(step$egoid, dem$egoid)]
step$Income <- dem$Income[match(step$egoid, dem$egoid)]
step$BMI <- dem$BMI[match(step$egoid, dem$egoid)]
# Extract eigenfunctions
step_mat <- as.matrix(step_wide[,-c(1:4)])
View(step_mat)
Steps_fpca <- fpca.sc(Y = step_mat)
Phi_hat <- Steps_fpca$efunctions
# Include first 4 eigenfunctions in data
N = length(unique(dem$egoid))
N = length(unique(dem$egoid))
step$Phi1 <- rep(Phi_hat[,1], N)
step$Phi2 <- rep(Phi_hat[,2], N)
step$Phi3 <- rep(Phi_hat[,3], N)
step$Phi4 <- rep(Phi_hat[,4], N)
# Fit a random functional intercept model
fit_rfi <- bam(steps ~ s(sind, bs="cr",k=30) + College + Gender + Race + Income +
s(sind, by = BMI, bs="cr", k=30) + s(egoid, by = Phi1, bs="cr", k=30) +
s(egoid, by = Phi2, bs="cr", k=30) + s(egoid, by = Phi3, bs="cr", k=30) +
s(egoid, by = Phi4, bs="cr", k=30), method="fREML", data=step, discrete=TRUE)
summary(fit_rfi)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
# libraries
library(kableExtra)
library(tidyverse)
library(table1)
load("D:/CU/Thesis/Clustering/Data/SimData.RData")
#### function for rolling probabilities
roll_avg = function(x, window = 14){
roll_mat = matrix(nrow = dim(x)[1], ncol = dim(x)[2])
for(i in 1:dim(x)[1]){
roll_mat[i,] = roll_sum(x[i,], width = window, min_obs = 1)/window
}
return(roll_mat)
}
### Combine continuous DTW data
dtw_ext = cont_ext[cont_ext$Distance == DTW,]
### Combine continuous DTW data
dtw_ext = cont_ext[cont_ext$Distance == "DTW",]
dtw_int = cont_int[cont_int$Distance == "DTW",]
View(dtw_int)
dtw_int = cont_int[cont_int$Distance == "DTW" & cont_int$Clusters == 5,]
# Change colnames to show direction of validation index
colnames(bin_ext)[4:8] <- c("ARI (+)", "RI (+)", "J (+)", "FM (+)", "VI (-)")
# Change to long format
bin_ext_long <- bin_ext %>%
pivot_longer(cols = 4:8, names_to = "Validation Index", values_to = "Index") %>%
mutate(`Distance:Method` = paste0(Distance, ":", Method)) %>%
select(`Seed`, `Validation Index`, `Index`, `Distance:Method`) %>%
pivot_wider(names_from = `Distance:Method`, values_from = `Index`)
View(bin_ext_long)
View(dtw_ext)
View(bin_ext)
# Update format
dtw_ext_long <- dtw_ext %>%
pivot_longer(cols = 5:9, names_to = "Validation Index", values_to = "Index") %>%
mutate(`Window:Method` = paste0("Window", Window, ":", Method)) %>%
select(`Seed`, `Validation Index`, `Index`, `Window:Method`) %>%
pivot_wider(names_from = `Window:Method`, values_from = `Index`)
View(dtw_ext_long)
View(bin_int)
View(dtw_int)
dtw_ext_link <- dtw_ext %>%
pivot_longer(cols = 5:9, names_to = "Validation Index", values_to = "Index") %>%
select(`Seed`, `Validation Index`, `Index`, `Method`) %>%
pivot_wider(names_from = `Method`, values_from = `Index`)
View(dtw_ext_link)
### Combine continuous DTW data
dtw_ext = cont_ext[cont_ext$Distance == "DTW",]
dtw_ext_link <- dtw_ext %>%
pivot_longer(cols = 5:9, names_to = "Validation Index", values_to = "Index") %>%
select(`Seed`, `Validation Index`, `Index`, `Method`) %>%
pivot_wider(names_from = `Method`, values_from = `Index`)
dtw_ext_link <- dtw_ext %>%
pivot_longer(cols = 5:9, names_to = "Validation Index", values_to = "Index") %>%
select(`Seed`, `Validation Index`, `Index`, `Method`)
dtw_ext_link <- dtw_ext %>%
pivot_longer(cols = 5:9, names_to = "Validation Index", values_to = "Index") %>%
select(`Seed`, `Validation Index`, `Index`, `Method`) %>%
pivot_wider(names_from = "Method", values_from = "Index")
dtw_ext_link <- dtw_ext %>%
pivot_longer(cols = 5:9, names_to = "Validation Index", values_to = "Index") %>%
select(`Validation Index`, `Index`, `Method`) %>%
pivot_wider(names_from = "Method", values_from = "Index")
dtw_ext_link <- dtw_ext %>%
pivot_longer(cols = 5:9, names_to = "Validation Index", values_to = "Index") %>%
mutate(Obs = 1:length(dtw_ext$Index)) %>%
select(`Obs`, `Validation Index`, `Index`, `Method`) %>%
pivot_wider(names_from = "Method", values_from = "Index")
dtw_ext_link <- dtw_ext %>%
pivot_longer(cols = 5:9, names_to = "Validation Index", values_to = "Index") %>%
mutate(Obs = 1:length(dtw_ext_link$Index)) %>%
select(`Obs`, `Validation Index`, `Index`, `Method`) %>%
pivot_wider(names_from = "Method", values_from = "Index")
dtw_ext_link <- dtw_ext %>%
pivot_longer(cols = 5:9, names_to = "Validation Index", values_to = "Index") %>%
mutate(Obs = 1:length(Index)) %>%
select(`Obs`, `Validation Index`, `Index`, `Method`) %>%
pivot_wider(names_from = "Method", values_from = "Index")
dtw_ext_link <- dtw_ext %>%
pivot_longer(cols = 5:9, names_to = "Validation Index", values_to = "Index") %>%
mutate(Obs = 1:length(Index)) %>%
select(`Obs`, `Validation Index`, `Index`, `Method`) %>%
pivot_wider(names_from = `Method`, values_from = `Index`)
dtw_ext_link <- dtw_ext %>%
pivot_longer(cols = 5:9, names_to = "Validation Index", values_to = "Index")
dtw_ext_link <- dtw_ext %>%
pivot_longer(cols = 5:9, names_to = "Validation Index", values_to = "Index") %>%
select(`Seed`, `Window`, `Validation Index`, `Index`, `Method`) %>%
pivot_wider(names_from = `Method`, values_from = `Index`)
dtw_ext_window <- dtw_ext %>%
pivot_longer(cols = 5:9, names_to = "Validation Index", values_to = "Index") %>%
select(`Seed`, `Window`, `Validation Index`, `Index`, `Method`) %>%
pivot_wider(names_from = `Window`, values_from = `Index`)
View(dtw_ext_window)
